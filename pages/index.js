import Head from "next/head";
import Image from "next/legacy/image";
import axios from "axios";
import { useState, useEffect } from "react";
import { BsSearch } from "react-icons/bs";
import Weather from "../components/Weather";
import Spinner from "../components/Spinner";
// import Custom404 from "../pages/404";
import errorHandler from "@/components/errorHandler";
import FourOhOh from "./404";

export default function Home() {
  const [city, setCity] = useState("");
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);
  const [err, setError] = useState(null);
  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;

  // console.log(city);

  const fetchWeather = (e, response, request) => {
    try {
      e.preventDefault();
      setLoading(true);
      axios
        .get(url)
        .then((response) => {
          setWeather(response.data);
        })
        .catch((err) => {
          if (err.response && err.response.status === 400) {
            setError(err.response.data.err);
          } else {
            setError("Oops! Something went wrong.");
          }
        });

      setCity("");
      setLoading(false);
    } catch (err) {
      console.log(err.message);
      // if (err.response) {
      //   console.log(err.response.data);
      //   console.log(err.response.status);
      //   console.log(err.response.headers);
      //   response.status(404).send("Sorry. Something went wrong");
      // } else if (err.request) {
      // } else {
      // }
    }
  };

  // const fetchWeather = (e, response, request) => {
  //   try {
  //     e.preventDefault();
  //     setLoading(true);
  //     axios.get(url).then((response) => {
  //       setWeather(response.data);
  //     });
  //     setCity("");
  //     setLoading(false);
  //   } catch (err) {
  //     errorHandler(err);
  //     // if (err.response) {
  //     //   console.log(err.response.data);
  //     //   console.log(err.response.status);
  //     //   console.log(err.response.headers);
  //     //   response.status(404).send("Sorry. Something went wrong");
  //     // } else if (err.request) {
  //     // } else {
  //     // }
  //   }
  // };

  const refresh = () => {
    setWeather({});
  };

  return (
    <div>
      <Head>
        <title>Weather - Next App</title>
        <meta name="description" content="Generated by create next app" />
        {/* <meta name="viewport" content="width=device-width, initial-scale=1" /> */}
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* Background */}
      <Image
        src="https://images.unsplash.com/photo-1438786657495-640937046d18?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80"
        layout="fill"
        className=" bg-cover bg-center bg-no-repeat brightness-50 w-full h-screen z=[1]"
        alt="Cape Perpetua"
      ></Image>
      {/* Search */}
      <div>
        <div className="relative group flex justify-between items-center max-w-[500px] w-full m-auto pt-4 text-white z-10">
          <div
            className="absolute -inset-0.5 bg-gradient-to-r  from-blue-500 to-green-500 w-full m-auto p-3 rounded-2xl blur-md opacity-75 
          group-hover:to-blue-500 group-hover:from-green-500 shadow-md 
          animate-tilt"
          ></div>
          <form
            onSubmit={fetchWeather}
            className=" relative px-7 py-4 leading-none flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl bg-gradient-to-r from-blue-500 
            group-hover:to-blue-500 group-hover:from-green-500 shadow-md 
            "
          >
            <div>
              <input
                city="city"
                value={city}
                onChange={(e) => setCity(e.target.value)}
                className="bg-transparent border-none text-white focus:outline-none text-2xl
                "
                type="text"
                placeholder="Search City"
              />
            </div>
            <button
              onClick={() => {
                fetchWeather();
                refresh();
              }}
              data-te-ripple-init
              data-te-ripple-color="light"
            >
              <BsSearch size={20} />
            </button>
          </form>
        </div>
      </div>
      {/* Weather */}
      {weather.main && <Weather data={weather} />}
      {err && (
        <div
          className="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mt-4"
          role="alert"
        >
          <p className="font-bold">Error: 400 Bad Request</p>
          <p>{err}</p>
        </div>
      )}
      <h3></h3>
    </div>
  );
}
